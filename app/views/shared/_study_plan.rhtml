<% disert_theme = study_plan.index.disert_theme %>
<b><%= study_plan.index.student.display_name %></b>
<% if study_plan.index.finished? %>
<h5><%= _("This study has been finished") %></h5>
<ul>
  <li>
  <div class='info'>
    <%= study_plan.index.finished_on.strftime('%d. %m. %Y') %>
  </div>
  <b><%= _("finished on") %>: </b>
  </li>
</ul>
<% end %>
<% if study_plan.atestation  %>
<h5><%= _("last atestation:") %></h5>
<ul>
  <%= print_statements(study_plan.atestation) %>
</ul>
<% elsif study_plan.approvement && !disert_theme.has_methodology? %>
<h5><%= _("study plan approvement process:") %></h5>
<ul>
  <%= print_statements(study_plan.approvement) %>
</ul>
<% elsif disert_theme.approvement && !study_plan.atestation %>
<h5><%= _("methodogy approvement process") %></h5> 
<ul>
  <%= print_statements(disert_theme.approvement) %>
</ul>
<% end %>
<h5>
  <%= _("Study plan") %>
</h5>
<%= atestation_links(study_plan) %>
<ul id='<%= "study_plan#{study_plan.id}" %>'>
<% if study_plan.canceled? %>
  <li>
  <div class='info'><%= study_plan.canceled_on.strftime('%d. %m. %Y') %></div>
  <b><%= _("canceled on") %>:</b>
  </li>
<% end %>
<% if study_plan.approved? %>
  <li>
  <div class='info'><%= study_plan.approved_on.strftime('%d. %m. %Y') %></div>
  <b><%= _("approved on") %>: </b>
  </li>
<% end %>
<%= render(:partial => 'shared/final_exam', :locals => {:study_plan => study_plan})
render(:partial => 'shared/subjects', :locals => {:subjects => 
study_plan.plan_subjects, :title => _("subjects")}) %>
</ul>
<%= render(:partial => 'shared/disert_theme', 
  :locals => {:disert_theme => study_plan.index.disert_theme, :study_plan =>
  study_plan, :methodology => true}) %>
  <% unless study_plan.approved?
    document = study_plan
  else 
    document = study_plan.index.disert_theme
  end %>
<%= approve_forms(document) %>
<% if @session['user'].has_role?('tutor') %>
<%= link_to_remote("back", :url => {:controller => 'students', :action => 
"filter", :filter_by => @session['filter']}, :update => 'students_list',
:loading => visual_effect(:appear, 'loading'), :interactive => 
visual_effect(:fade, "loading")) %>
<% end %>
